// <auto-generated />
using System;
using EntityFrameWorkTutorial.School;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFrameWorkTutorial.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFrameWorkTutorial.School.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("SchoolAddressCity")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SchoolAddressCountry")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SchoolAddressCounty")
                        .HasMaxLength(100);

                    b.Property<string>("SchoolAddressLineOne")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SchoolAddressLineThree")
                        .HasMaxLength(255);

                    b.Property<string>("SchoolAddressLineTwo")
                        .HasMaxLength(255);

                    b.Property<string>("SchoolAddressPostcode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("SchoolId");

                    b.ToTable("School");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.SchoolTeacher", b =>
                {
                    b.Property<int>("SchoolTeacherId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("SchoolTeacherAddressId");

                    b.Property<int>("SchoolTeacherContactId");

                    b.HasKey("SchoolTeacherId");

                    b.HasIndex("SchoolTeacherAddressId")
                        .IsUnique();

                    b.HasIndex("SchoolTeacherContactId")
                        .IsUnique();

                    b.ToTable("SchoolTeacher");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.SchoolTeacherAddress", b =>
                {
                    b.Property<int>("SchoolTeacherAddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLineOne")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("AddressLineThree")
                        .HasMaxLength(255);

                    b.Property<string>("AddressLineTwo")
                        .HasMaxLength(255);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("SchoolTeacherId");

                    b.HasKey("SchoolTeacherAddressId");

                    b.ToTable("SchoolTeacherAddress");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.SchoolTeacherContact", b =>
                {
                    b.Property<int>("SchoolTeacherContactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("PrimaryContactEmailAddresss")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("PrimaryContactName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PrimaryContactTelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<int>("SchoolTeacherId");

                    b.Property<string>("SecondaryContactEmailAddresss")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SecondaryContactName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SecondaryContactTelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.HasKey("SchoolTeacherContactId");

                    b.ToTable("SchoolTeacherContact");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<int>("GradeId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<byte[]>("Photo");

                    b.Property<int?>("SchoolId");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("GradeId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.StudentAddress", b =>
                {
                    b.Property<int>("StudentAddressId");

                    b.Property<string>("AddressLineOne")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("AddressLineThree")
                        .HasMaxLength(255);

                    b.Property<string>("AddressLineTwo")
                        .HasMaxLength(255);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("StudentId");

                    b.HasKey("StudentAddressId");

                    b.ToTable("StudentAddress");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.StudentContact", b =>
                {
                    b.Property<int>("StudentContactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("PrimaryContactEmailAddresss")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("PrimaryContactName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PrimaryContactTelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("SecondaryContactEmailAddresss")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("SecondaryContactName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SecondaryContactTelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<int>("StudentId");

                    b.HasKey("StudentContactId");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentContact");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.StudentCourse", b =>
                {
                    b.Property<int>("StudentCourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseDescription")
                        .IsRequired();

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("StudentCourseId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.StudentGrade", b =>
                {
                    b.Property<int>("StudentGradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100);

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("StudentGradeId");

                    b.ToTable("StudentGrade");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.SchoolTeacher", b =>
                {
                    b.HasOne("EntityFrameWorkTutorial.School.SchoolTeacherAddress", "SchoolTeacherAddress")
                        .WithOne("SchoolTeacher")
                        .HasForeignKey("EntityFrameWorkTutorial.School.SchoolTeacher", "SchoolTeacherAddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EntityFrameWorkTutorial.School.SchoolTeacherContact", "SchoolTeacherContact")
                        .WithOne("SchoolTeacher")
                        .HasForeignKey("EntityFrameWorkTutorial.School.SchoolTeacher", "SchoolTeacherContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.Student", b =>
                {
                    b.HasOne("EntityFrameWorkTutorial.School.StudentCourse", "Course")
                        .WithMany("Student")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EntityFrameWorkTutorial.School.StudentGrade", "Grade")
                        .WithMany("Student")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EntityFrameWorkTutorial.School.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId");
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.StudentAddress", b =>
                {
                    b.HasOne("EntityFrameWorkTutorial.School.Student", "Student")
                        .WithOne("Address")
                        .HasForeignKey("EntityFrameWorkTutorial.School.StudentAddress", "StudentAddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EntityFrameWorkTutorial.School.StudentContact", b =>
                {
                    b.HasOne("EntityFrameWorkTutorial.School.Student", "Student")
                        .WithOne("Contact")
                        .HasForeignKey("EntityFrameWorkTutorial.School.StudentContact", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
